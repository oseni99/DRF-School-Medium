#!/usr/bin/env bash

set -o errexit
set -o nounset
set -o pipefail

working_dir="$(dirname ${0})"

source "${working_dir}/_sourced/constants.sh"
source "${working_dir}/_sourced/messages.sh"

if [[ -z ${1+x} ]]; then
  message_error "Backup filename is not specified yet it is a required parameter. Make sure you provide one and try again."
  exit 1
fi

backup_filename="${BACKUP_DIR_PATH}/${1}"

if [[ ! -f "${backup_filename}" ]]; then
  message_error "No backup with the specified backup filename was found. Check out the 'backups' maintenance script output to see if there is one and try again."
  exit 1
fi

message_welcome "Restoring the '${POSTGRES_DB}' database from the '${backup_filename}' backup......."

if [[ "${POSTGRES_USER}" == "postgres" ]]; then
  message_error "Restoring as 'postgres' user is not allowed. Assign 'POSTGRES_USER' env with another one and try again."
  exit 1
fi

export PGHOST="${POSTGRES_HOST}"
export PGPORT="${POSTGRES_PORT}"
export PGUSER="${POSTGRES_USER}"
export PGPASSWORD="${POSTGRES_PASSWORD}"
export PGDATABASE="${POSTGRES_DB}"

# Terminate active connections
message_info "Terminating active connections to the database..."
psql -v ON_ERROR_STOP=1 --username "${POSTGRES_USER}" --dbname "postgres" <<-EOSQL
  SELECT pg_terminate_backend(pid)
  FROM pg_stat_activity
  WHERE datname = '${PGDATABASE}'
    AND pid <> pg_backend_pid();
EOSQL

# Check if there are still active connections
active_sessions=$(psql -U ${POSTGRES_USER} -d postgres -t -c "SELECT count(*) FROM pg_stat_activity WHERE datname = '${PGDATABASE}' AND pid <> pg_backend_pid();")
if [ "$active_sessions" -gt 0 ]; then
  message_error "There are still active connections to the database. Unable to proceed with the restore."
  exit 1
fi

message_info "Dropping the database..."
dropdb "${PGDATABASE}"

message_info "Creating a new database..."
createdb --owner="${POSTGRES_USER}" "${PGDATABASE}"

message_info "Applying the backup to the new database..."
gunzip -c "${backup_filename}" | psql "${PGDATABASE}"

message_success "The '${PGDATABASE}' database has been restored successfully from the '${backup_filename}' backup"
